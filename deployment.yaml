apiVersion: apps/v1beta2
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: grafana
    chart: grafana-0.0.31
    heritage: Tiller
    io.cattle.field/appId: grafana
    release: grafana
  name: grafana-grafana
  namespace: grafana
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: grafana
      release: grafana
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: grafana
        release: grafana
    spec:
      containers:
        - env:
            - name: GF_AUTH_BASIC_ENABLED
              value: "true"
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "false"
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: user
                  name: grafana-grafana
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: grafana-grafana
          image: grafana/grafana:5.0.0
          imagePullPolicy: IfNotPresent
          name: grafana
          ports:
            - containerPort: 3000
              name: web
              protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-storage
        - args:
            - --watch-dir=/var/grafana-dashboards
            - --watch-dir=/var/grafana-dashboards/k8s
            - --watch-dir=/var/grafana-dashboards/k8s-resources
            - --grafana-url=http://127.0.0.1:3000
          env:
            - name: GRAFANA_USER
              valueFrom:
                secretKeyRef:
                  key: user
                  name: grafana-grafana
            - name: GRAFANA_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: grafana-grafana
          image: quay.io/coreos/grafana-watcher:v0.0.8
          imagePullPolicy: IfNotPresent
          name: grafana-watcher
          resources:
            limits:
              cpu: 100m
              memory: 32Mi
            requests:
              cpu: 50m
              memory: 16Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/grafana-dashboards/k8s
              name: grafana-dashboards-k8s
            - mountPath: /var/grafana-dashboards/k8s-resources
              name: grafana-dashboards-resources
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: grafana-grafana
      serviceAccountName: grafana-grafana
      terminationGracePeriodSeconds: 30
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-grafana
        - configMap:
            defaultMode: 420
            name: grafana-grafana
          name: grafana-dashboards-k8s
        - configMap:
            defaultMode: 420
            name: grafana-grafana-resources
          name: grafana-dashboards-resources
